{
"id":10,
"url":"",
"guid":"561BFCB8DA18EE118C5C32A5A9F17050",
"pagename":"Event-Based-Programming-Second-Edition.html",
"datalevel":8,
"dataversion":1,
"ispagetobuild":true,
"name":"Event-Based Programming - Second Edition",
"lang":"en",
"pubdate":"20111223",
"thumb":"",
"isbn10":"",
"isbn13":"9781430243267",
"website":"https:\/\/www.apress.com\/fr\/book\/9781430243267",
"cover":"",
"cover_100w":"",
"cover_150w":"",
"cover_200w":"",
"cover_300w":"",
"cover_400w":"",
"cover_500w":"",
"cover_100h":"",
"cover_200h":"",
"cover_300h":"",
"cover_400h":"",
"cover_500h":"",
"cover_100x100":"",
"cover_200x200":"",
"cover_300x300":"",
"cover_400x400":"",
"cover_500x500":"",
"cover_130x110":"",
"authors":[
{
"id":10,
"url":"",
"guid":"4419FCB8DA18EE118C5C32A5A9F17050",
"pagename":"Ted-Faison.html",
"datalevel":6,
"dataversion":1,
"ispagetobuild":true,
"name":""}],
"publishers":[
{
"id":1,
"url":"",
"guid":"FA16FDB8DA18EE118C5C32A5A9F17050",
"pagename":"Apress.html",
"datalevel":4,
"dataversion":1,
"ispagetobuild":true,
"label":"Apress"}],
"descriptions":[
{
"guid":"D81BFCB8DA18EE118C5C32A5A9F17050",
"pagename":"",
"datalevel":3,
"dataversion":1,
"ispagetobuild":true,
"lang":"en",
"text":"Languages like C#, VB .NET, and Delphi include built-in support for events, and these events become very powerful when they connect the objects and components of a system. Events make it possible for such parts to interact without any coupling. And the resulting parts can be developed and tested individually which keeps the code clean and simple.\n\nComponent-based development (CBD) is an extension of object-oriented programming. CBD does away with the language and vendor-specific limitations of OOP, makes software reuse more practical and accelerates the development process. Event-based programming is the next logical step in CBD, and makes components more reusable due to their decoupled nature. But event-based systems are easier to develop, which means they're cheaper and more reliable than traditional OOP or CBD systems.\n\nThis book teaches you how to develop software based on parts that interact primarily through an event mechanism. You'll learn how to use events in many different situations, to solve recurring development problems without coupling. The book introduces Signal Wiring Diagram, a novel form of software diagram similar to the circuit diagrams used by hardware designers. The book concludes with a series of case studies, incorporating all featured concepts. In a nutshell, you'll want to pick up a copy of this book because it:\n\nShows how to use an event-based paradigm to reduce or completely eliminate coupling between classes and components\nDescribes components, including coordinators, workers, builders, binders, and routers\nContains three complete case studies that model concepts being used to design small, medium, and large systems"}],
"tocs":[
],
"keywords":[
]}